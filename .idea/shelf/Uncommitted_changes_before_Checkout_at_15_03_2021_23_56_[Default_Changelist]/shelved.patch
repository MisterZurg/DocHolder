Index: backend/docholder/src/main/java/com/docholder/controllers/MainController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/docholder/src/main/java/com/docholder/controllers/MainController.java b/backend/docholder/src/main/java/com/docholder/controllers/MainController.java
deleted file mode 100644
--- a/backend/docholder/src/main/java/com/docholder/controllers/MainController.java	(revision 5fe12e7813adcf7c701597ce30fb71ebb8cf4e60)
+++ /dev/null	(revision 5fe12e7813adcf7c701597ce30fb71ebb8cf4e60)
@@ -1,34 +0,0 @@
-package com.docholder.controllers;
-
-import java.util.HashMap;
-import java.util.Map;
-
-import org.springframework.context.annotation.*;
-import org.springframework.web.bind.annotation.*;
-import org.springframework.web.servlet.config.annotation.*;
-
-@RestController
-public class MainController {
-	
-	@RequestMapping("/")
-    public Map<String, String> home(){
-		HashMap<String, String> map = new HashMap<>();
-	    map.put("key", "value");
-	    map.put("foo", "bar");
-	    map.put("aa", "bb");
-	    return map;
-    }
-
-	
-	
-//	@Configuration
-//	public class WebConfig extends WebMvcConfigurerAdapter {
-//
-//	    @Override
-//	    public void addCorsMappings(CorsRegistry registry) {
-//	        registry.addMapping("/**")
-//	                .allowedMethods("HEAD", "GET", "PUT", "POST", "DELETE", "PATCH");
-//	    }
-//	}
-
-}
\ No newline at end of file
Index: DocHolder/target/classes/static/js/main.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/DocHolder/target/classes/static/js/main.js b/DocHolder/target/classes/static/js/main.js
new file mode 100644
--- /dev/null	(date 1615840811391)
+++ b/DocHolder/target/classes/static/js/main.js	(date 1615840811391)
@@ -0,0 +1,6 @@
+var app = new Vue({
+  el: '#app',
+  data: {
+    message: 'Привет, Vue!'
+  }
+})
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
new file mode 100644
--- /dev/null	(date 1615841716711)
+++ b/.idea/workspace.xml	(date 1615841716711)
@@ -0,0 +1,96 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="AutoImportSettings">
+    <option name="autoReloadType" value="SELECTIVE" />
+  </component>
+  <component name="ChangeListManager">
+    <list default="true" id="a76cbb1f-19a2-43b5-9ca6-8043b372d873" name="Default Changelist" comment="UPDATE REST controller #3&#10;Renamed controller, Added entities.">
+      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/DocHolder/DocHolder.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/DocHolder/HELP.md" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/DocHolder/target/classes/application.properties" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/DocHolder/target/classes/com/example/DocHolder/DocHolderApplication.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/DocHolder/target/classes/com/example/DocHolder/controller/MessageController$1$1.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/DocHolder/target/classes/com/example/DocHolder/controller/MessageController$1.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/DocHolder/target/classes/com/example/DocHolder/controller/MessageController.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/DocHolder/target/classes/com/example/DocHolder/exceptions/NotFoundException.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/DocHolder/target/classes/static/index.html" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/DocHolder/target/classes/static/js/main.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/DocHolder/target/test-classes/com/example/DocHolder/DocHolderApplicationTests.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/backend/docholder/src/main/java/com/docholder/controllers/UsersController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/backend/docholder/src/main/java/com/docholder/exceptions/NotFoundException.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/backend/docholder/src/main/java/com/docholder/model/Company.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/backend/docholder/src/main/java/com/docholder/model/CompanyStatus.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/backend/docholder/src/main/java/com/docholder/model/CompanyValidationInfo.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/backend/docholder/src/main/java/com/docholder/model/Document.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/backend/docholder/src/main/java/com/docholder/model/Repository.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/backend/docholder/src/main/java/com/docholder/model/User.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/backend/docholder/src/main/java/com/docholder/model/UserGender.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/backend/docholder/src/main/java/com/docholder/model/UserRole.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/backend/docholder/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/backend/docholder/pom.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/backend/docholder/src/main/java/com/docholder/DocholderApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/backend/docholder/src/main/java/com/docholder/DocholderApplication.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/backend/docholder/src/main/java/com/docholder/controllers/MainController.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/backend/docholder/target/classes/com/docholder/DocholderApplication.class" beforeDir="false" afterPath="$PROJECT_DIR$/backend/docholder/target/classes/com/docholder/DocholderApplication.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/backend/docholder/target/classes/com/docholder/controllers/MainController$WebConfig.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/backend/docholder/target/classes/com/docholder/controllers/MainController.class" beforeDir="false" afterPath="$PROJECT_DIR$/backend/docholder/target/classes/com/docholder/controllers/MainController.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/backend/docholder/target/test-classes/com/docholder/DocholderApplicationTests.class" beforeDir="false" afterPath="$PROJECT_DIR$/backend/docholder/target/test-classes/com/docholder/DocholderApplicationTests.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/public/index.html" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/public/index.html" afterDir="false" />
+    </list>
+    <option name="SHOW_DIALOG" value="false" />
+    <option name="HIGHLIGHT_CONFLICTS" value="true" />
+    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+    <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="Git.Settings">
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$" value="T3" />
+      </map>
+    </option>
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+    <option name="SWAP_SIDES_IN_COMPARE_BRANCHES" value="true" />
+  </component>
+  <component name="ProjectId" id="1poFC4rBEqR7LA6FJznHU1FIjJT" />
+  <component name="ProjectViewState">
+    <option name="hideEmptyMiddlePackages" value="true" />
+    <option name="showLibraryContents" value="true" />
+  </component>
+  <component name="PropertiesComponent">
+    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
+    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
+    <property name="WebServerToolWindowFactoryState" value="false" />
+    <property name="aspect.path.notification.shown" value="true" />
+    <property name="node.js.path.for.package.tslint" value="project" />
+    <property name="node.js.selected.package.tslint" value="(autodetect)" />
+    <property name="nodejs_package_manager_path" value="npm" />
+    <property name="vue.rearranger.settings.migration" value="true" />
+  </component>
+  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
+  <component name="TaskManager">
+    <task active="true" id="Default" summary="Default task">
+      <changelist id="a76cbb1f-19a2-43b5-9ca6-8043b372d873" name="Default Changelist" comment="UPDATE REST controller #3&#10;Renamed controller, Added entities." />
+      <created>1615841405345</created>
+      <option name="number" value="Default" />
+      <option name="presentableId" value="Default" />
+      <updated>1615841405345</updated>
+      <workItem from="1615841406702" duration="309000" />
+    </task>
+    <servers />
+  </component>
+  <component name="TypeScriptGeneratedFilesManager">
+    <option name="version" value="3" />
+  </component>
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="TAB_STATES">
+      <map>
+        <entry key="MAIN">
+          <value>
+            <State />
+          </value>
+        </entry>
+      </map>
+    </option>
+    <option name="oldMeFiltersMigrated" value="true" />
+  </component>
+</project>
\ No newline at end of file
Index: backend/docholder/src/main/java/com/docholder/controllers/UsersController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/docholder/src/main/java/com/docholder/controllers/UsersController.java b/backend/docholder/src/main/java/com/docholder/controllers/UsersController.java
new file mode 100644
--- /dev/null	(date 1615840811393)
+++ b/backend/docholder/src/main/java/com/docholder/controllers/UsersController.java	(date 1615840811393)
@@ -0,0 +1,75 @@
+package com.docholder.controllers;
+
+import com.docholder.model.Repository;
+import com.docholder.model.User;
+import org.springframework.web.bind.annotation.*;
+
+@RestController
+public class UsersController {
+    Repository rep = new Repository();
+
+    // Поиск клиента
+    @GetMapping("/users")
+    public User userById(
+            @RequestParam(value = "id") Integer id) {
+        return rep.userById(id);
+    }
+
+    @PostMapping("/users")
+    public User setUser(
+            @RequestParam(value = "id") int id,
+            @RequestParam(value = "name") String name) {
+        User usr = rep.userById(id);
+        if (usr != null) {
+            usr.setName(name);
+            return usr;
+        } else {
+            return rep.addUser(new User(id, name));
+        }
+    }
+
+    @DeleteMapping("/users")
+    public User deleteUser(
+            @RequestParam(value = "id") Integer id) {
+        /// Client cl = rep.clientById(id);
+        return rep.deleteUser(id);
+    }
+    // Мозг отказал, мапинг выше уже реализует POST / UPDATE
+    /*
+    @PutMapping("/clients")
+    public Client updateClient(
+            @RequestParam(value = "id") int id,
+            @RequestParam(value = "name") String name){
+        Client cl = rep.clientById(id);
+        if (cl != null){
+            cl.setName(name);
+            return cl;
+        } else {
+            return rep.addClient(new Client(id, name));
+        }
+    }
+    */
+
+    // Это писал Влад, мб пригодится
+	/*
+
+	@RequestMapping("/")	// http://server/path
+	 public Map<String, String> home(){
+	 	HashMap<String, String> map = new HashMap<>();
+	 	map.put("company", "Рога и Копыта");
+	 	map.put("company", "Пе'шков Limited");
+	 	map.put("company", "Stuff");
+	 	return map;
+	 }
+
+	@Configuration
+	public class WebConfig extends WebMvcConfigurerAdapter {
+
+		@Override
+		public void addCorsMappings(CorsRegistry registry) {
+			registry.addMapping("/**")
+					.allowedMethods("HEAD", "GET", "PUT", "POST", "DELETE", "PATCH");
+		}
+	}
+	*/
+}
\ No newline at end of file
Index: backend/docholder/src/main/java/com/docholder/model/Company.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/docholder/src/main/java/com/docholder/model/Company.java b/backend/docholder/src/main/java/com/docholder/model/Company.java
new file mode 100644
--- /dev/null	(date 1615840811395)
+++ b/backend/docholder/src/main/java/com/docholder/model/Company.java	(date 1615840811395)
@@ -0,0 +1,13 @@
+package com.docholder.model;
+
+import lombok.Data;
+
+@Data
+public class Company {
+    private Integer id;
+    private String name;
+    private String description;
+    // TODO : private ... logo;
+    private boolean companyStatus;
+
+}
Index: backend/docholder/src/main/java/com/docholder/model/CompanyValidationInfo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/docholder/src/main/java/com/docholder/model/CompanyValidationInfo.java b/backend/docholder/src/main/java/com/docholder/model/CompanyValidationInfo.java
new file mode 100644
--- /dev/null	(date 1615840811402)
+++ b/backend/docholder/src/main/java/com/docholder/model/CompanyValidationInfo.java	(date 1615840811402)
@@ -0,0 +1,11 @@
+package com.docholder.model;
+
+import lombok.Data;
+
+@Data
+public class CompanyValidationInfo {
+    private Integer id;
+    // TODO : parametrName ... ;
+    // TODO : private String ERROR_MSG;
+
+}
Index: backend/docholder/src/main/java/com/docholder/model/CompanyStatus.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/docholder/src/main/java/com/docholder/model/CompanyStatus.java b/backend/docholder/src/main/java/com/docholder/model/CompanyStatus.java
new file mode 100644
--- /dev/null	(date 1615840811395)
+++ b/backend/docholder/src/main/java/com/docholder/model/CompanyStatus.java	(date 1615840811395)
@@ -0,0 +1,9 @@
+package com.docholder.model;
+
+public enum CompanyStatus {
+    DRAFT,
+    READY_TO_VERIFY,
+    APPROVED,
+    NOT_APPROVED,
+    PUBLISHED // VERIFIED
+}
Index: backend/docholder/src/main/java/com/docholder/model/Repository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/docholder/src/main/java/com/docholder/model/Repository.java b/backend/docholder/src/main/java/com/docholder/model/Repository.java
new file mode 100644
--- /dev/null	(date 1615840811403)
+++ b/backend/docholder/src/main/java/com/docholder/model/Repository.java	(date 1615840811403)
@@ -0,0 +1,35 @@
+package com.docholder.model;
+
+import java.util.Hashtable;
+import java.util.Map;
+
+public class Repository {
+    // Клиенты
+    static Map<Integer, User> users = new Hashtable<>();
+
+    static {
+        users.put(1, new User(1, "Игнат"));
+        users.put(2, new User(2, "Christopher"));
+        users.put(3, new User(3, "Егор"));
+        users.put(4, new User(4 ,"Гибон"));
+    }
+
+    public User userById(Integer id) {
+        return users.get(id);
+    }
+
+    public User addUser(User usr) {
+        users.put(usr.getId(), usr);
+        return usr;
+    }
+
+    public User deleteUser(Integer id){
+        return users.remove(id);
+    }
+    // Предприятия
+    // private List<Map<String, String>> companies = new ArrayList<Map<String, String>>() {{
+    //     add(new HashMap<String, String>() {{ put("id", "1"); put("name", "Рога и Копыта"); }});
+    //     add(new HashMap<String, String>() {{ put("id", "2"); put("name", "Пе'шков Limited"); }});
+    //     add(new HashMap<String, String>() {{ put("id", "3"); put("name", "Stuff"); }});
+    // }};
+}
Index: backend/docholder/src/main/java/com/docholder/model/Document.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/docholder/src/main/java/com/docholder/model/Document.java b/backend/docholder/src/main/java/com/docholder/model/Document.java
new file mode 100644
--- /dev/null	(date 1615840811402)
+++ b/backend/docholder/src/main/java/com/docholder/model/Document.java	(date 1615840811402)
@@ -0,0 +1,12 @@
+package com.docholder.model;
+
+import lombok.Data;
+
+@Data
+public class Document {     // need 2 decide name File
+    private Integer id;
+    private String name;
+    // TODO : private ... fileRole (documentRole)
+    private Integer companyID;
+    private Integer userID; // author
+}
Index: backend/docholder/src/main/java/com/docholder/model/UserGender.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/docholder/src/main/java/com/docholder/model/UserGender.java b/backend/docholder/src/main/java/com/docholder/model/UserGender.java
new file mode 100644
--- /dev/null	(date 1615840811404)
+++ b/backend/docholder/src/main/java/com/docholder/model/UserGender.java	(date 1615840811404)
@@ -0,0 +1,15 @@
+package com.docholder.model;
+
+public enum UserGender {
+    MALE,
+    FEMALE,
+    PREFER_NOT_2_SAY,
+    // "Я - человек современный, поэтому уважаю:
+    CISGENDER,
+    BIGENDER,
+    DEMIGENDER,
+    PANGENDER,
+    ANDROGYNES,
+    GENDERFLUIDS,
+    GENDERKWIR
+}
Index: backend/docholder/src/main/java/com/docholder/model/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/docholder/src/main/java/com/docholder/model/User.java b/backend/docholder/src/main/java/com/docholder/model/User.java
new file mode 100644
--- /dev/null	(date 1615840811404)
+++ b/backend/docholder/src/main/java/com/docholder/model/User.java	(date 1615840811404)
@@ -0,0 +1,21 @@
+package com.docholder.model;
+
+import lombok.Data;
+
+@Data
+public class User {
+    private Integer id;
+    private String name;
+    private String surname;
+    private String email;
+    private String phone;
+    private Integer companyID;
+    private UserRole role;
+    // TODO : private ... profilePicture;
+    private UserGender gender;
+
+    public User(int id, String name) {
+        this.id = id;
+        this.name = name;
+    }
+}
Index: backend/docholder/src/main/java/com/docholder/exceptions/NotFoundException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/docholder/src/main/java/com/docholder/exceptions/NotFoundException.java b/backend/docholder/src/main/java/com/docholder/exceptions/NotFoundException.java
new file mode 100644
--- /dev/null	(date 1615840811394)
+++ b/backend/docholder/src/main/java/com/docholder/exceptions/NotFoundException.java	(date 1615840811394)
@@ -0,0 +1,9 @@
+package com.docholder.exceptions;
+
+import org.springframework.http.HttpStatus;
+import org.springframework.web.bind.annotation.ResponseStatus;
+
+@ResponseStatus(value = HttpStatus.NOT_FOUND)
+public class NotFoundException extends RuntimeException{
+
+}
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1615840811360)
+++ b/.idea/vcs.xml	(date 1615840811360)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: backend/docholder/src/main/java/com/docholder/model/UserRole.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/docholder/src/main/java/com/docholder/model/UserRole.java b/backend/docholder/src/main/java/com/docholder/model/UserRole.java
new file mode 100644
--- /dev/null	(date 1615840811405)
+++ b/backend/docholder/src/main/java/com/docholder/model/UserRole.java	(date 1615840811405)
@@ -0,0 +1,10 @@
+package com.docholder.model;
+
+public enum UserRole {
+    ADMIN,
+    DIRECTOR,
+    ACCOUNTANT,
+    REGULAR,
+    REGULAR_UNEMPLOYED
+    // TODO : Add some new roles
+}
Index: DocHolder/DocHolder.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/DocHolder/DocHolder.iml b/DocHolder/DocHolder.iml
new file mode 100644
--- /dev/null	(date 1615840811361)
+++ b/DocHolder/DocHolder.iml	(date 1615840811361)
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="web" name="Web">
+      <configuration>
+        <webroots />
+        <sourceRoots>
+          <root url="file://$MODULE_DIR$/src/main/java" />
+          <root url="file://$MODULE_DIR$/src/main/resources" />
+        </sourceRoots>
+      </configuration>
+    </facet>
+    <facet type="jpa" name="JPA">
+      <configuration>
+        <setting name="validation-enabled" value="true" />
+        <setting name="provider-name" value="Hibernate" />
+        <datasource-mapping />
+        <naming-strategy-map />
+      </configuration>
+    </facet>
+    <facet type="Spring" name="Spring">
+      <configuration />
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_11">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-data-jpa:2.4.3" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-aop:2.4.3" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aop:5.3.4" level="project" />
+    <orderEntry type="library" name="Maven: org.aspectj:aspectjweaver:1.9.6" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-jdbc:2.4.3" level="project" />
+    <orderEntry type="library" name="Maven: com.zaxxer:HikariCP:3.4.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jdbc:5.3.4" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.transaction:jakarta.transaction-api:1.3.3" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.persistence:jakarta.persistence-api:2.2.3" level="project" />
+    <orderEntry type="library" name="Maven: org.hibernate:hibernate-core:5.4.28.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.jboss.logging:jboss-logging:3.4.1.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.javassist:javassist:3.27.0-GA" level="project" />
+    <orderEntry type="library" name="Maven: net.bytebuddy:byte-buddy:1.10.20" level="project" />
+    <orderEntry type="library" name="Maven: antlr:antlr:2.7.7" level="project" />
+    <orderEntry type="library" name="Maven: org.jboss:jandex:2.2.3.Final" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml:classmate:1.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.dom4j:dom4j:2.1.3" level="project" />
+    <orderEntry type="library" name="Maven: org.hibernate.common:hibernate-commons-annotations:5.1.2.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.glassfish.jaxb:jaxb-runtime:2.3.3" level="project" />
+    <orderEntry type="library" name="Maven: org.glassfish.jaxb:txw2:2.3.3" level="project" />
+    <orderEntry type="library" name="Maven: com.sun.istack:istack-commons-runtime:3.0.11" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.activation:jakarta.activation:1.2.2" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-jpa:2.4.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-commons:2.4.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-orm:5.3.4" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.3.4" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-tx:5.3.4" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.3.4" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aspects:5.3.4" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-web:2.4.3" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter:2.4.3" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot:2.4.3" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.4.3" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-logging:2.4.3" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-classic:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-core:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-to-slf4j:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-api:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:jul-to-slf4j:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.annotation:jakarta.annotation-api:1.3.5" level="project" />
+    <orderEntry type="library" name="Maven: org.yaml:snakeyaml:1.27" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-json:2.4.3" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-core:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-tomcat:2.4.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-core:9.0.43" level="project" />
+    <orderEntry type="library" name="Maven: org.glassfish:jakarta.el:3.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.43" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-web:5.3.4" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-webmvc:5.3.4" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-expression:5.3.4" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: org.postgresql:postgresql:42.2.18" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: org.checkerframework:checker-qual:3.5.0" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.springframework.boot:spring-boot-starter-test:2.4.3" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.springframework.boot:spring-boot-test:2.4.3" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.springframework.boot:spring-boot-test-autoconfigure:2.4.3" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: com.jayway.jsonpath:json-path:2.4.0" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: net.minidev:json-smart:2.3" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: net.minidev:accessors-smart:1.2" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.ow2.asm:asm:5.0.4" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.xml.bind:jakarta.xml.bind-api:2.3.3" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.activation:jakarta.activation-api:1.2.2" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.assertj:assertj-core:3.18.1" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.hamcrest:hamcrest:2.2" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter:5.7.1" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-api:5.7.1" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.apiguardian:apiguardian-api:1.1.0" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.opentest4j:opentest4j:1.2.0" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.platform:junit-platform-commons:1.7.1" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-params:5.7.1" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-engine:5.7.1" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.platform:junit-platform-engine:1.7.1" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.mockito:mockito-core:3.6.28" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: net.bytebuddy:byte-buddy-agent:1.10.20" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.objenesis:objenesis:3.1" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.mockito:mockito-junit-jupiter:3.6.28" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.skyscreamer:jsonassert:1.5.0" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: com.vaadin.external.google:android-json:0.0.20131108.vaadin1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-core:5.3.4" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jcl:5.3.4" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.springframework:spring-test:5.3.4" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.xmlunit:xmlunit-core:2.7.0" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: backend/docholder/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n\t<modelVersion>4.0.0</modelVersion>\r\n\t<parent>\r\n\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\r\n\t\t<version>2.4.3</version>\r\n\t\t<relativePath/> <!-- lookup parent from repository -->\r\n\t</parent>\r\n\t<groupId>com</groupId>\r\n\t<artifactId>docholder</artifactId>\r\n\t<version>0.0.1-SNAPSHOT</version>\r\n\t<name>docholder</name>\r\n\t<description>Project for Netcracker</description>\r\n\t<properties>\r\n\t\t<java.version>1.8</java.version>\r\n\t</properties>\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\r\n\t\t</dependency>\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.postgresql</groupId>\r\n\t\t\t<artifactId>postgresql</artifactId>\r\n\t\t\t<scope>runtime</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-test</artifactId>\r\n\t\t\t<scope>test</scope>\r\n\t\t</dependency>\r\n\t\t\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-devtools</artifactId>\r\n\t\t\t<scope>runtime</scope>\r\n\t\t\t<optional>true</optional>\r\n\t\t</dependency>\r\n\t</dependencies>\r\n\r\n\t<build>\r\n\t\t<plugins>\r\n\t\t\t<plugin>\r\n\t\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\r\n\t\t\t</plugin>\r\n\t\t</plugins>\r\n\t</build>\r\n\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/docholder/pom.xml b/backend/docholder/pom.xml
--- a/backend/docholder/pom.xml	(revision 5fe12e7813adcf7c701597ce30fb71ebb8cf4e60)
+++ b/backend/docholder/pom.xml	(date 1615841691528)
@@ -39,7 +39,11 @@
 			<scope>runtime</scope>
 			<optional>true</optional>
 		</dependency>
-	</dependencies>
+        <dependency>
+            <groupId>org.projectlombok</groupId>
+            <artifactId>lombok</artifactId>
+        </dependency>
+    </dependencies>
 
 	<build>
 		<plugins>
Index: frontend/public/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"\">\r\n  <head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\r\n    <link rel=\"icon\" href=\"<%= BASE_URL %>favicon.ico\">\r\n    <title><%= htmlWebpackPlugin.options.title %></title>\r\n  </head>\r\n  <body>\r\n    <noscript>\r\n      <strong>We're sorry but <%= htmlWebpackPlugin.options.title %> doesn't work properly without JavaScript enabled. Please enable it to continue.</strong>\r\n    </noscript>\r\n    <div id=\"app\"></div>\r\n    <!-- built files will be auto injected -->\r\n  </body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/public/index.html b/frontend/public/index.html
--- a/frontend/public/index.html	(revision 5fe12e7813adcf7c701597ce30fb71ebb8cf4e60)
+++ b/frontend/public/index.html	(date 1615841633249)
@@ -1,17 +1,23 @@
 <!DOCTYPE html>
 <html lang="">
-  <head>
+<head>
     <meta charset="utf-8">
     <meta http-equiv="X-UA-Compatible" content="IE=edge">
     <meta name="viewport" content="width=device-width,initial-scale=1.0">
     <link rel="icon" href="<%= BASE_URL %>favicon.ico">
     <title><%= htmlWebpackPlugin.options.title %></title>
-  </head>
-  <body>
-    <noscript>
-      <strong>We're sorry but <%= htmlWebpackPlugin.options.title %> doesn't work properly without JavaScript enabled. Please enable it to continue.</strong>
-    </noscript>
-    <div id="app"></div>
-    <!-- built files will be auto injected -->
-  </body>
+    <!-- версия для разработки, отображает полезные предупреждения в консоли -->
+    <script src="https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js"></script>
+    <!-- CDN -->
+    <script src="https://cdn.jsdelivr.net/npm/vue-resource@1.5.2"></script>
+
+</head>
+<body>
+<noscript>
+    <strong>We're sorry but <%= htmlWebpackPlugin.options.title %> doesn't work properly without JavaScript enabled.
+        Please enable it to continue.</strong>
+</noscript>
+<div id="app"></div>
+<!-- built files will be auto injected -->
+</body>
 </html>
Index: DocHolder/HELP.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/DocHolder/HELP.md b/DocHolder/HELP.md
new file mode 100644
--- /dev/null	(date 1615840811362)
+++ b/DocHolder/HELP.md	(date 1615840811362)
@@ -0,0 +1,19 @@
+# Getting Started
+
+### Reference Documentation
+For further reference, please consider the following sections:
+
+* [Official Apache Maven documentation](https://maven.apache.org/guides/index.html)
+* [Spring Boot Maven Plugin Reference Guide](https://docs.spring.io/spring-boot/docs/2.4.3/maven-plugin/reference/html/)
+* [Create an OCI image](https://docs.spring.io/spring-boot/docs/2.4.3/maven-plugin/reference/html/#build-image)
+* [Spring Web](https://docs.spring.io/spring-boot/docs/2.4.3/reference/htmlsingle/#boot-features-developing-web-applications)
+* [Spring Data JPA](https://docs.spring.io/spring-boot/docs/2.4.3/reference/htmlsingle/#boot-features-jpa-and-spring-data)
+
+### Guides
+The following guides illustrate how to use some features concretely:
+
+* [Building a RESTful Web Service](https://spring.io/guides/gs/rest-service/)
+* [Serving Web Content with Spring MVC](https://spring.io/guides/gs/serving-web-content/)
+* [Building REST services with Spring](https://spring.io/guides/tutorials/bookmarks/)
+* [Accessing Data with JPA](https://spring.io/guides/gs/accessing-data-jpa/)
+
Index: DocHolder/target/classes/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1251
===================================================================
diff --git a/DocHolder/target/classes/application.properties b/DocHolder/target/classes/application.properties
new file mode 100644
--- /dev/null	(date 1615840811363)
+++ b/DocHolder/target/classes/application.properties	(date 1615840811363)
@@ -0,0 +1,6 @@
+# server.port = 8080
+# server.servlet.context-path=/api
+# server.contextPath-path=/api
+spring.datasource.driverClassName=com.postgresql.jdbc.driver
+# spring.datasource.url=postgres
+
Index: DocHolder/target/classes/static/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/DocHolder/target/classes/static/index.html b/DocHolder/target/classes/static/index.html
new file mode 100644
--- /dev/null	(date 1615840811390)
+++ b/DocHolder/target/classes/static/index.html	(date 1615840811390)
@@ -0,0 +1,12 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+    <meta charset="UTF-8">
+    <title>Spring DocHolder</title>
+    <!-- версия для разработки, отображает полезные предупреждения в консоли -->
+    <script src="https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js"></script>
+</head>
+<body>
+
+</body>
+</html>
\ No newline at end of file
